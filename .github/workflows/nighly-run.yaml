on:
  workflow_dispatch:
  schedule:
    # Runs at 03:00 UTC on every day-of-week
    - cron: '0 3 * * *'

jobs:
  tests:
    uses: ./.github/workflows/tests.yaml

  check-neqsim-release:
    runs-on: ubuntu-latest
    needs: tests
    outputs:
      url: ${{ steps.check-release.outputs.url }}
      version: ${{ steps.check-release.outputs.version}}

    steps:
      - uses: actions/checkout@master

      - name: Check for NeqSim release
        id: check-release
        run: |
          LATEST_RELEASE=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/equinor/neqsim/releases/latest | jq '.tag_name' --raw-output)

          NO_V_PREFIX="${LATEST_RELEASE:1}"

          CURRENT_JNEQSIM=$(curl https://pypi.org/pypi/jneqsim/json | jq '.info.version' --raw-output)

          echo "Latest Neqsim release: $LATEST_RELEASE"
          echo "Current JNeqsim version: $CURRENT_JNEQSIM"

          if [[ "$NO_V_PREFIX" != "$CURRENT_JNEQSIM" ]]; then
            echo "New NeqSim version found. Updating jNeqSim"

            # Define the URL for getting the new NeqSim jar
            URL="https://www.github.com/equinor/neqsim/releases/download/${LATEST_RELEASE}/neqsim-${NO_V_PREFIX}.jar"

            echo "url=$URL" >> "$GITHUB_OUTPUT"
            echo "version=$NO_V_PREFIX" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "url=none" >> "$GITHUB_OUTPUT"
          echo "No update, jNeqSim is up-to-date with NeqSim"
          exit 0


  publish:
    needs: check-neqsim-release
    if: ${{ needs.check-neqsim-release.outputs.url != 'none' }}
    uses: ./.github/workflows/publish.yaml
    with:
      neqsim_jar_url: "${{ needs.check-neqsim-release.outputs.url }}"
      version: ${{ needs.check-neqsim-release.outputs.version }}
